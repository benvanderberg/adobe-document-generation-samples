/*
 * Copyright 2019 Adobe
 * All Rights Reserved.
 *
 * NOTICE: Adobe permits you to use, modify, and distribute this file in
 * accordance with the terms of the Adobe license agreement accompanying
 * it. If you have received this file from a source other than Adobe,
 * then your use, modification, or distribution of it requires the prior
 * written permission of Adobe.
 */

const ExecutionContext = require('./execution-context'),
	Credentials = require('./auth/credentials'),
	ClientConfig = require('./client-config'),
	FileRef = require('./io/file-ref'),
	CreatePDFOperation = require('./operation/create-pdf-operation'),
	CreatePDFFromHtmlOptions = require('./operation/option/createpdf/create-pdf-from-html-options'),
	CreatePDFFromWordOptions = require('./operation/option/createpdf/create-pdf-from-word-options'),
	CreatePDFFromExcelOptions = require('./operation/option/createpdf/create-pdf-from-excel-options'),
	CreatePDFFromPPTOptions = require('./operation/option/createpdf/create-pdf-from-ppt-options'),
	PageLayout = require('./operation/option/createpdf/page-layout'),
	ExportPDFOperation = require('./operation/export-pdf-operation'),
	ExportPDFToImagesOperation = require('./operation/export-pdf-to-images-operation'),
	CombineFilesOperation = require('./operation/combine-file-operation'),
	PageRanges = require('./operation/option/page-ranges'),
	OCROperation = require('./operation/ocr-operation'),
	OCROptions = require('./operation/option/ocr/ocr-options'),
	CompressPDFOperation = require('./operation/compress-pdf-operation'),
	CompressPDFOptions = require('./operation/option/compresspdf/compress-pdf-options')
	LinearizePDFOperation = require('./operation/linearize-pdf-operation'),
	ProtectPDFOperation = require('./operation/protect-pdf-operation'),
	ExtractPDFOperation = require('./operation/extract-pdf-operation'),
	PasswordProtectOptions = require('./operation/option/protectpdf/password-protect-options'),
	RotatePagesOperation = require('./operation/rotate-pages-operation'),
	DeletePagesOperation = require('./operation/delete-pages-operation'),
	ReorderPagesOperation = require('./operation/reorder-pages-operation'),
	InsertPagesOperation = require('./operation/insert-pages-operation'),
	ReplacePagesOperation = require('./operation/replace-pages-operation'),
	RemoveProtectionOperation = require('./operation/remove-protection-operation'),
	PDFPropertiesOperation = require('./operation/pdf-properties-operation'),
	Permissions = require('./operation/option/protectpdf/permissions'),
	SplitPDFOperation = require('./operation/split-pdf-operation'),
	DocumentMergeOperation = require('./operation/document-merge-operation'),
	DocumentMergeOptions = require('./operation/option/documentmerge/document-merge-options'),
	PDFPropertiesOptions = require('./operation/option/pdfproperties/pdf-properties-options'),
	ExtractPdfOptions = require('./operation/option/extractpdf/extract-pdf-options');
	ServiceApiError = require('./error/service-api-error'),
	ServiceUsageError = require('./error/service-usage-error'),
	Fragments = require('./operation/option/documentmerge/fragments');

const CreatePDF = {
		Operation: CreatePDFOperation,
		SupportedMediaTypes: CreatePDFOperation.SupportedMediaTypes,
		SupportedSourceFormat: CreatePDFOperation.SupportedSourceFormat,
		options: {
			html: {
				CreatePDFFromHtmlOptions,
				PageLayout
			},
			word: {
				CreatePDFFromWordOptions,
				SupportedDocumentLanguage : CreatePDFFromWordOptions.SupportedDocumentLanguage
			},
			excel: {
				CreatePDFFromExcelOptions,
				SupportedDocumentLanguage : CreatePDFFromExcelOptions.SupportedDocumentLanguage
			},
			ppt: {
				CreatePDFFromPPTOptions,
				SupportedDocumentLanguage : CreatePDFFromPPTOptions.SupportedDocumentLanguage
			}
		}
	},

	ExportPDF = {
		Operation: ExportPDFOperation,
		SupportedSourceFormat: ExportPDFOperation.SupportedSourceFormat,
		SupportedTargetFormats: ExportPDFOperation.SupportedExportFormats
	},

	ExportPDFToImages = {
		Operation: ExportPDFToImagesOperation,
		SupportedSourceFormat: ExportPDFToImagesOperation.SupportedSourceFormat,
		SupportedTargetFormats: ExportPDFToImagesOperation.SupportedExportFormats
	},

	CombineFiles = {
		Operation: CombineFilesOperation,
		SupportedSourceFormat: CombineFilesOperation.SupportedSourceFormat
	},

	OCR = {
		Operation: OCROperation,
		SupportedSourceFormat: OCROperation.SupportedSourceFormat,
		options:{
			OCROptions,
			OCRSupportedLocale: OCROptions.OCRSupportedLocale,
			OCRSupportedType: OCROptions.OCRSupportedType
		}
	},

	CompressPDF = {
		Operation: CompressPDFOperation,
		SupportedSourceFormat: CompressPDFOperation.SupportedSourceFormat,
		options:{
			CompressPDFOptions,
			CompressionLevel: CompressPDFOptions.CompressionLevel
		}
	},

	LinearizePDF = {
		Operation: LinearizePDFOperation,
		SupportedSourceFormat: LinearizePDFOperation.SupportedSourceFormat
	},

	ProtectPDF = {
		Operation: ProtectPDFOperation,
		SupportedSourceFormat: ProtectPDFOperation.SupportedSourceFormat,
		options: {
			PasswordProtectOptions,
			Permissions,
			EncryptionAlgorithm: PasswordProtectOptions.EncryptionAlgorithm,
			ContentEncryption: PasswordProtectOptions.ContentEncryption,
			Permission: PasswordProtectOptions.Permission
		}
	},

	ExtractPDF = {
		Operation: ExtractPDFOperation,
		SupportedSourceFormat: ExtractPDFOperation.SupportedSourceFormat,
		options: {
			ExtractPdfOptions,
			TableStructureType: ExtractPdfOptions.TableStructureType,
			ExtractElementType: ExtractPdfOptions.ExtractElementType,
			ExtractRenditionsElementType: ExtractPdfOptions.ExtractRenditionsElementType
		}

	},

	RotatePages = {
		Operation: RotatePagesOperation,
		SupportedSourceFormat: RotatePagesOperation.SupportedSourceFormat,
		Angle: RotatePagesOperation.Angle

	},

	DeletePages = {
		Operation: DeletePagesOperation,
		SupportedSourceFormat: DeletePagesOperation.SupportedSourceFormat
	},

	ReorderPages = {
		Operation: ReorderPagesOperation,
		SupportedSourceFormat: ReorderPagesOperation.SupportedSourceFormat
	},

	InsertPages = {
		Operation: InsertPagesOperation,
		SupportedSourceFormat: InsertPagesOperation.SupportedSourceFormat
	},

	ReplacePages = {
		Operation: ReplacePagesOperation,
		SupportedSourceFormat: ReplacePagesOperation.SupportedSourceFormat
	},

	RemoveProtection = {
		Operation: RemoveProtectionOperation,
		SupportedSourceFormat: RemoveProtectionOperation.SupportedSourceFormat
	},

	SplitPDF = {
		Operation: SplitPDFOperation,
		SupportedSourceFormat: SplitPDFOperation.SupportedSourceFormat
	},

	DocumentMerge = {
		Operation: DocumentMergeOperation,
		SupportedSourceFormat: DocumentMergeOperation.SupportedSourceFormat,
		options: {
			DocumentMergeOptions,
			OutputFormat: DocumentMergeOptions.OutputFormat
		}
	},

	PDFProperties = {
		Operation: PDFPropertiesOperation,
		SupportedSourceFormat : PDFPropertiesOperation.SupportedSourceFormat,
		options: {
			PDFPropertiesOptions
		}
	},

	Error = {
		ServiceApiError: ServiceApiError,
		ServiceUsageError: ServiceUsageError
	},

	/**
	 *
	 * This module is the single entry point for clients to interact with the  PDF Services SDK. This is the only file that
	 * a 3rd party app should require. All the necessary classes and modules required to
	 * perform operations via the SDK are exposed through this module.
	 *
	 * @module PDFServicesSDK
	 *
	 */
	PDFServicesSDK = {
		/**
		 *
		 * @summary Reference to the {@link Credentials} class.
		 * @instance
		 * @memberOf module:PDFServicesSDK
		 * @type {Credentials}
		 *
		 */
		Credentials,

		/**
		 *
		 * @summary Reference to the {@link ClientConfig} class.
		 * @instance
		 * @memberOf module:PDFServicesSDK
		 * @type {ClientConfig}
		 *
		 */
		ClientConfig,

		/**
		 *
		 * @summary Reference to the {@link ExecutionContext} class.
		 * @instance
		 * @memberOf module:PDFServicesSDK
		 * @type {ExecutionContext}
		 *
		 */
		ExecutionContext,

		/**
		 * @summary Reference to the {@link FileRef} class.
		 * @instance
		 * @memberOf module:PDFServicesSDK
		 * @type {FileRef}
		 *
		 */
		FileRef,

		/**
		 * @summary Object containing references to classes required for creating a PDF.
		 * @instance
		 * @memberOf module:PDFServicesSDK
		 * @type {Object}
		 *
		 * @property {CreatePDFOperation} Operation - Reference to the operation class responsible for creating a PDF
		 * @property {CreatePDFOperation.SupportedMediaTypes} SupportedMediaTypes - List of supported media types which can
		 * be converted to a PDF. Deprecated since version 1.1.0
		 * @property {CreatePDFOperation.SupportedSourceFormat} SupportedSourceFormat - List of supported file formats which can
		 * be converted to a PDF
		 * @property {Object} options - Contains references to configurable options of the operation
		 * @property {Object} options.html - Contains references to html file format specific configurable options
		 * @property {CreatePDFFromHtmlOptions} options.html.CreatePDFFromHtmlOptions - Reference to the configurable
		 * options class for converting an HTML web page/archive to PDF.
		 *
		 *
		 * @property {Object} options.word - Contains references to word file format specific configurable options
		 * @property {CreatePDFFromWordOptions} options.word.CreatePDFFromWordOptions - Reference to the configurable
		 * options class for converting a word file (.doc,.docx, .rtf, .txt) to PDF.
		 * @property {CreatePDFFromWordOptions.SupportedDocumentLanguage} options.word.SupportedDocumentLanguage - Supported languages for word file
		 * conversion.
		 *
		 * @property {Object} options.excel - Contains references to excel file format specific configurable options
		 * @property {CreatePDFFromExcelOptions} options.excel.CreatePDFFromExcelOptions - Reference to the configurable
		 * options class for converting a excel file (.xls, .xlsx) to PDF.
		 * @property {CreatePDFFromExcelOptions.SupportedDocumentLanguage} options.excel.SupportedDocumentLanguage - Supported languages for excel file
		 * conversion.
		 *
		 *
		 * @property {Object} options.ppt - Contains references to ppt file format specific configurable options
		 * @property {CreatePDFFromPPTOptions} options.ppt.CreatePDFFromPPTOptions - Reference to the configurable
		 * options class for converting a ppt file (.ppt, .pptx) to PDF.
		 * @property {CreatePDFFromPPTOptions.SupportedDocumentLanguage} options.ppt.SupportedDocumentLanguage - Supported languages for ppt file conversion.
		 *
		 */
		CreatePDF,

		/**
		 *
		 * @summary Object containing references to classes required for exporting a PDF file.
		 * @type {Object}
		 * @memberOf module:PDFServicesSDK
		 * @instance
		 * @property {ExportPDFOperation} Operation - Reference to the operation class responsible for exporting a PDF file
		 * @property {ExportPDFOperation.SupportedExportFormats} SupportedTargetFormats - Supported Target Formats to
		 * which a PDF file can be exported
		 * @property {ExportPDFOperation.SupportedSourceFormat} SupportedSourceFormat - List of supported file formats which
		 * can be exported to other file formats
		 */
		ExportPDF,

		/**
		 *
		 * @summary Object containing references to classes required for exporting a PDF file to list of images.
		 * @type {Object}
		 * @memberOf module:PDFServicesSDK
		 * @instance
		 * @property {ExportPDFToImagesOperation} Operation - Reference to the operation class responsible for exporting a PDF file to a list of images
		 * @property {ExportPDFToImagesOperation.SupportedExportFormats} to which a PDF file can be exported as a list of images
		 * @property {ExportPDFToImagesOperation.SupportedSourceFormat} SupportedSourceFormat - List of supported file formats which can be exported to image formats
		 */
		ExportPDFToImages,

		/**
		 * @summary Object containing references to classes required for combining multiple PDF files.
		 * @memberOf module:PDFServicesSDK
		 * @instance
		 * @type {Object}
		 * @property {CombineFilesOperation} Operation - Reference to the operation class responsible for combining
		 * multiple PDF files
		 * @property {CombineFilesOperation.SupportedSourceFormat} SupportedSourceFormat - List of supported file formats which
		 * can be combined
		 */
		CombineFiles,

		/**
		 * @summary Reference to {@link PageRanges} class.
		 * @instance
		 * @memberOf module:PDFServicesSDK
		 * @type {PageRanges}
		 */
		PageRanges,

		/**
		 * @summary Object containing references to classes required to perform OCR (Optical Character Recognition)
		 * operation on a PDF file.
		 * @memberOf module:PDFServicesSDK
		 * @instance
		 * @type {Object}
		 * @property {OCROperation} Operation - Reference to the operation class responsible to perform
		 * OCR (Optical Character Recognition) to convert a PDF file into a searchable PDF file
		 * @property {OCROperation.SupportedSourceFormat} SupportedSourceFormat - List of supported file formats on which
		 * OCR can be performed
		 * @property {OCROptions} OCROptions - Reference to the {@link OCROptions} class which provides parameters for
		 * converting a PDF to a searchable PDF using {@link OCROperation}.
		 * @property {OCROptions.OCRSupportedLocale} OCRSupportedLocales - Supported locales for {@link OCROperation}
		 * @property {OCROptions.OCRSupportedType} OCRSupportedType - Supported OCR types for {@link OCROperation}
		 */
		OCR,

		/**
		 * @summary Object containing references to classes required to compress the PDF file.
		 * @memberOf module:PDFServicesSDK
		 * @instance
		 * @type {Object}
		 * @property {CompressPDFOperation} Operation - Reference to the operation class responsible to reduce the PDF file.
		 * @property {CompressPDFOperation.SupportedSourceFormat} SupportedSourceFormat - List of supported file format
		 * which can be compressed
		 * @property {CompressPDFOptions} CompressPDFOptions - Reference to the {@link CompressPDFOptions} class which provides parameters for
		 * reducing file size of a PDF using {@link CompressPDFOperation}.
		 * @property {CompressPDFOptions.CompressionLevel} CompressionLevel - Supported compression levels for {@link CompressPDFOperation}
		 */
		CompressPDF,

		/**
		 * @summary Object containing references to classes required to optimise the PDF for Fast Web View.
		 * @memberOf module:PDFServicesSDK
		 * @instance
		 * @type {Object}
		 * @property {LinearizePDFOperation} Operation - Reference to the operation class responsible to linearize
		 * the input PDF file.
		 * @property {LinearizePDFOperation.SupportedSourceFormat} SupportedSourceFormat - List of supported file formats
		 * which can be linearized for fast Web View
		 */
		LinearizePDF,

		/**
		 * @summary Object containing references to classes required to protect a PDF file with password(s).
		 * The password(s) is used for encrypting the PDF document and setting the restriction on certain features
		 * like printing, editing and copying in the PDF document.
		 * @memberOf module:PDFServicesSDK
		 * @instance
		 * @type {Object}
		 * @property {ProtectPDFOperation} Operation - Reference to the operation class responsible to protect a PDF
		 * file
		 * @property {ProtectPDFOperation.SupportedSourceFormat} SupportedSourceFormat - List of supported file formats
		 * which can be protected
		 * @property {Object} options - Contains references to configurable options of the operation
		 * @property {PasswordProtectOptions} options.PasswordProtectOptions - Reference to the configurable options class
		 * which specifies the parameters required to protect a PDF file
		 * @property {Permissions} Permissions - Reference to the Permissions class which specifies the set of document access permission
		 */
		ProtectPDF,

		/**
		 * @summary Object containing references to classes required for extracting a PDF.
		 * @instance
		 * @memberOf module:PDFServicesSdk
		 * @type {Object}
		 * @property {Object} options - Contains references to configurable options of the operation
		 * @property {ExtractPdfOptions} options.ExtractPdfOptions - Reference to the configurable options class
		 * @property {ExtractPDFOperation} Operation - Reference to the operation class responsible to protect a PDF
		 * @property {ExtractPDFOperation} options.ExtractPDFOperation - Reference to the operation class responsible for extracting a PDF
		 * @property {ExtractPDFOperation.SupportedSourceFormat} SupportedSourceFormat - Supported file formats whose
		 * elements can be extracted.
		 */
		ExtractPDF,

		/**
		 * @summary Object containing references to classes required to rotate specific pages in a PDF file.
		 * @memberOf module:PDFServicesSDK
		 * @instance
		 * @type {Object}
		 * @property {RotatePagesOperation} Operation - Reference to the operation class responsible for rotating
		 * multiple pages in a PDF file
		 * @property {RotatePagesOperation.SupportedSourceFormat} SupportedSourceFormat - List of supported file formats
		 * for Rotate Pages Operation
		 * @property {RotatePagesOperation.Angle} Angle - Angle for rotation for {@link RotatePagesOperation}
		 */
		RotatePages,

		/**
		 * @summary Object containing references to classes required for deleting a range, subset of pages in a PDF file.
		 * @memberOf module:PDFServicesSDK
		 * @instance
		 * @type {Object}
		 * @property {DeletePagesOperation} Operation - Reference to the operation class responsible for deleting
		 * multiple pages in a PDF file
		 * @property {DeletePagesOperation.SupportedSourceFormat} SupportedSourceFormat - List of supported file formats
		 * for Delete Pages Operation
		 */
		DeletePages,

		/**
		 * @summary Object containing references to classes required for reordering of pages in a PDF file.
		 * @memberOf module:PDFServicesSDK
		 * @instance
		 * @type {Object}
		 * @property {ReorderPagesOperation} Operation - Reference to the operation class responsible for reordering
		 * pages in a PDF file
		 * @property {ReorderPagesOperation.SupportedSourceFormat} SupportedSourceFormat - List of supported file formats
		 * for Reorder Pages Operation
		 */
		ReorderPages,

		/**
		 * @summary Object containing references to classes required for inserting specific pages of multiple PDF files
		 * into a single PDF file.
		 * @memberOf module:PDFServicesSDK
		 * @instance
		 * @type {Object}
		 * @property {InsertPagesOperation} Operation - Reference to the operation class responsible for insertion of
		 * specific pages of multiple PDF files into a single PDF file
		 * @property {InsertPagesOperation.SupportedSourceFormat} SupportedSourceFormat - List of supported file formats
		 * for Insert Pages Operation
		 */
		InsertPages,

		/**
		 * @summary Object containing references to classes required for replacement of specific pages in a PDF file
		 * with pages from multiple PDF files.
		 * @memberOf module:PDFServicesSDK
		 * @instance
		 * @type {Object}
		 * @property {ReplacePagesOperation} Operation - Reference to the operation class responsible for replacing
		 * specific pages of a PDF file with pages from multiple PDF files
		 * @property {ReplacePagesOperation.SupportedSourceFormat} SupportedSourceFormat - List of supported file formats
		 * for Replace Pages Operation
		 */
		ReplacePages,

		/**
		 * @summary Object containing references to classes required for removal of password security from a PDF file.
		 * @memberOf module:PDFServicesSDK
		 * @instance
		 * @type {Object}
		 * @property {RemoveProtectionOperation} Operation - Reference to the operation class responsible for removing
		 * password security from a PDF file
		 * @property {RemoveProtectionOperation.SupportedSourceFormat} SupportedSourceFormat - List of supported file formats
		 * for Remove Protection Operation
		 */
		RemoveProtection,

		/**
		 * @summary Object containing references to classes required for splitting a PDF document into multiple smaller
		 * documents by simply specifying either the number of files, pages per file, or page ranges.
		 * @memberOf module:PDFServicesSDK
		 * @instance
		 * @type {Object}
		 * @property {SplitPDFOperation} Operation - Reference to the operation class responsible for splitting
		 * a PDF file into multiple PDF files
		 * @property {SplitPDFOperation.SupportedSourceFormat} SupportedSourceFormat - List of supported file formats
		 * for Split PDF Operation
		 */
		SplitPDF,

		/**
		 * @summary Object containing references to classes required for merging MS Word based document templates with
		 * the JSON data to generate output documents in the specified format.
		 * @memberOf module:PDFServicesSDK
		 * @instance
		 * @type {Object}
		 * @property {DocumentMergeOperation} Operation - Reference to the operation class responsible for merging MS
		 * Word based document templates with the JSON data to generate output documents in the specified format.
		 * @property {DocumentMergeOperation.SupportedSourceFormat} SupportedSourceFormat - List of supported file formats
		 * for Document Merge Operation
		 * @property {Object} options - Contains references to configurable options of the operation
		 * @property {DocumentMergeOptions} options.DocumentMergeOptions - Reference to the configurable options class
		 * which specifies the parameters required for merging MS Word based document templates with
		 * the JSON data to generate output documents in the specified format
		 */
		DocumentMerge,

		/**
		 * @summary Object containing references to classes required for fetching the properties of a PDF File.
		 * @memberOf module:PDFServicesSDK
		 * @instance
		 * @type {Object}
		 * @property {PdfPropertiesOperation} Operation - Reference to the operation class responsible for fetching
		 * properties of a PDF file.
		 * @property {Object} options - Contains references to configurable options of the operation
		 * @property {PdfPropertiesOptions} options.PdfPropertiesOptions - Reference to the configurable options class
		 * which specifies the parameters for fetching the properties of a PDF file.
		 */
		PDFProperties,

		/**
		 * @summary Object containing references to error classes of PDFServicesSDK.
		 * @memberOf module:PDFServicesSDK
		 * @instance
		 * @type {Object}
		 * @property {ServiceApiError} ServiceApiError - Reference to the ServiceApiError which represents the category
		 * of errors which are thrown when an underlying service API call results in an error.
		 * @property {ServiceUsageError} ServiceUsageError - Reference to the ServiceApiError which represents the
		 * category of errors which are thrown when either service usage limit has been reached or credentials quota
		 * has been exhausted.
		 */
		Error,

		/**
		 * @summary Reference to {@link Fragments} class.
		 * @instance
		 * @memberOf module:PDFServicesSDK
		 * @type {Fragments}
		 */
		Fragments
	};

Object.freeze(PDFServicesSDK);
module.exports = PDFServicesSDK;
