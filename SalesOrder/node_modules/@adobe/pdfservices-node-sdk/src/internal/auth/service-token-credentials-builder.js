/*
 * Copyright 2019 Adobe
 * All Rights Reserved.
 *
 * NOTICE: Adobe permits you to use, modify, and distribute this file in
 * accordance with the terms of the Adobe license agreement accompanying
 * it. If you have received this file from a source other than Adobe,
 * then your use, modification, or distribution of it requires the prior
 * written permission of Adobe.
 */

const ServiceTokenCredentials = require('./service-token-credentials'),
	DefaultConfig = require('../config/dc-services-default-config');


class ServiceTokenCredentialsBuilder {
	/**
	 * @hideconstructor
	 */
	constructor() {

	}

	/**
	 * Set Client ID (API Key)
	 * @param {!String} clientId - Client Id (API Key)
	 * @returns {ServiceTokenCredentialsBuilder} This Builder instance to add any additional parameters.
	 */
	withClientId(clientId) {
		this.clientId = clientId;
		return this;
	}

	/**
	 * Set Client Secret
	 * @param {!String} clientSecret - Client Secret
	 * @returns {ServiceTokenCredentialsBuilder} This Builder instance to add any additional parameters.
	 */
	withClientSecret(clientSecret) {
		this.clientSecret = clientSecret;
		return this;
	}

	/**
	 * Set auth code
	 * @param {!String} authCode - Auth code
	 * @returns {ServiceTokenCredentialsBuilder} This Builder instance to add any additional parameters.
	 */
	withAuthCode(authCode) {
		this.authCode = authCode;
		return this;
	}

	/**
	 * Set ims token Uri
	 * @param imsUri
	 * @returns {ServiceTokenCredentialsBuilder} This Builder instance to add any additional parameters.
	 */
	setImsUri(imsUri) {
		this.imsUri = imsUri;
		return this;
	}

	setOpsUri(cpfOpsUri) {
		this.cpfOpsUri = cpfOpsUri;
		return this;
	}

	/**
	 * Returns a new {@link ServiceTokenCredentials} instance built from the current state of this builder.
	 * @returns {ServiceTokenCredentials} A ServiceTokenCredentials instance.
	 */
	build() {
		let serviceTokenCredentials = new ServiceTokenCredentials(this.clientId,
			this.clientSecret, this.authCode, this.imsUri, this.cpfOpsUri);
		Object.freeze(serviceTokenCredentials);
		return serviceTokenCredentials;
	}
}

module.exports = ServiceTokenCredentialsBuilder;
