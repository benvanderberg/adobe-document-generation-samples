/*
 * Copyright 2019 Adobe
 * All Rights Reserved.
 *
 * NOTICE: Adobe permits you to use, modify, and distribute this file in
 * accordance with the terms of the Adobe license agreement accompanying
 * it. If you have received this file from a source other than Adobe,
 * then your use, modification, or distribution of it requires the prior
 * written permission of Adobe.
 */

const Schema = require('validate');

class PageRange {
	constructor(start, end) {
		this.start = start;
		this.end = end;
	}

	getStart() {
		return this.start;
	}

	getEnd() {
		return this.end;
	}

	validate() {
		const validator = new Schema({
				'start': {
					type: Number,
					required: true,
					message: {
						type: 'pageRange start must be a Number',
						require: 'pageRange start cannot be null'
					}
				},
				'end': {
					type: Number,
					required: true,
					message: {
						type: 'pageRange end must be a number',
						required: 'pageRange end cannot be null'
					}
				}
			}),
			errors = validator.validate(this);
		if (errors.length > 0) {
			const messages = [];
			errors.forEach(err => messages.push(err.message));
			throw new Error(messages.join('; '));
		}
		if (this.start > this.end || this.start <= 0) {
			throw new Error('Invalid page range specified');
		}
	}

	toString() {
		if (this.start === this.end) {
			return this.start.toString();
		}
		if (Number.MAX_SAFE_INTEGER === this.end) {
			return `${this.start.toString() }-`;
		}
		return `${this.start.toString() }-${ this.end.toString()}`;
	}
}

module.exports = PageRange;
