/*
 * Copyright 2019 Adobe
 * All Rights Reserved.
 *
 * NOTICE: Adobe permits you to use, modify, and distribute this file in
 * accordance with the terms of the Adobe license agreement accompanying
 * it. If you have received this file from a source other than Adobe,
 * then your use, modification, or distribution of it requires the prior
 * written permission of Adobe.
 */

const DCServicesDefaultConfig = require('../../internal/config/dc-services-default-config');

class OperationMessage {
	constructor(sourceFileRefs, targetFileName, operationName){
		this.sourceFileRefs = sourceFileRefs;
		this.targetFileName = targetFileName;
		//For operations which can have input url we need to check if the url is set or not. eg : CreatePDF
		if (this.checkIfOperationCanHaveUrlAsInput(operationName)) {
			this.inputUrl = sourceFileRefs.input._inputUrl || null;
		}
		else {
			this.inputUrl = null;
		}
		this.outputType = null;
		//operationName is only used for logging purpose.
		this.operationName = operationName;
	}

	setOutputType(value){
		this.outputType = value;
  }

	checkIfOperationCanHaveUrlAsInput(operationName) {
		if (DCServicesDefaultConfig.operationName.createPdf === operationName) {
			return true;
		} else {
			return false;
		}
	}

	setIncludeRanges(value) {
		this.includeRanges = value;
	}

	setOptions(value) {
		this.options = value;
	}

	setTargetFormat(value) {
		this.targetFormat = value;
	}

	setBaseFileRef(value) {
		this.baseFileRef = value;
	}

	setOutputType(value){
		this.outputType = value;
	}

}

module.exports = OperationMessage;
